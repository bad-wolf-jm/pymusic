const { remote } = require('electron')
const { Menu, MenuItem } = remote


class ContextMenu {
    constructor(track, library) {
        this.track = track
        this.library = library
        this.menu = new Menu()
        this.menu.append(new MenuItem({label: 'Track info', click: () => {
            pc.stop()
            view.set_track(this.track)
            document.getElementById("track-edit-dialog").showModal()
        }}))
        this.menu.append(new MenuItem({type: 'separator'}))
        this.menu.append(new MenuItem({label: 'Shortlist', click: () => {
            this.library.shortlisted_tracks.append(this.track)

        }}))

        this.menu.append(new MenuItem({label: 'Marked as played', click: () => {
            this.library.unavailable_tracks.append(this.track)
        }}))
        this.menu.append(new MenuItem({label: 'Add to queue', click: () => {
            this.library.queue.append(this.track)
        }}))
        this.menu.append(new MenuItem({type:  'separator'}))
        this.menu.append(new MenuItem({label: 'Preview',
            submenu: [
                {label: 'Full track', click: () => {
                    pc.play(this.track)
                }},
                {label: 'Last 30 seconds', click: () => {
                    pc.play_last_30_seconds(this.track)
                }},
                {label: 'Last 10 seconds', click: () =>{
                    pc.play_last_10_seconds(this.track)
                }}
            ]}))

        this.menu.append(new MenuItem({type: 'separator'}))

        this.menu.on("menu-will-show", (e) => {})
        this.menu.on("menu-will-close", (e) => {})
    }

    popup() {
        this.menu.popup({window: remote.getCurrentWindow()})
    }

    close() {
        this.menu.closePopup()
    }
}

module.exports = {
    ContextMenu: ContextMenu
}