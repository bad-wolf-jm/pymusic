const { LinksList } = require('app/views/sidebar_library_links')
const { SessionsListPanel } = require('app/views/sidebar_sessions_list')
const { PlaylistListPanel } = require('app/views/sidebar_playlist_list')
const { PrecuePlayerView } = require("app/views/sidebar_precue_player")
const { AccordionLayout } = require("ui/layout/accordion")
const { Button } = require("ui/dom/button")


class Sidebar extends AccordionLayout {
    constructor(library) {
        super()
        this.setStyle({
            width:"100%",
            height: "100%"
        })
        this.accordionOpenPromise = {}
        this.linksView = new LinksList(T)
        
        this.playlistsView = new PlaylistListPanel()
        this.playlistsView.displayModel(library.playlists)
        this.playlistsView.on("row-click", (playlistId) => {
            T.display_playlist(playlistId)
        })

        this.sessionsListView = new SessionsListPanel()
        this.sessionsListView.displayModel(library.sessions)
        this.sessionsListView.on("row-click", (sessionId) => {
            T.display_session(sessionId)
        })        
        
        this.precuePlayerView = new PrecuePlayerView(library.tracks)
        this.precuePlayerView.set_controller(AppController)

        this.addPanel("Library", [], this.linksView)
        this.addPanel("Playlists", [], this.playlistsView)
        let playlistsHeader = this.getPanelHeader(this.playlistsView)
        let createPlaylistButton = new Button()
        createPlaylistButton.setText(`<i class="fa fa-plus"></i>`)
        createPlaylistButton.setStyle({
            outline: "none",
            fontSize: '9pt',
            border: '0px solid white',
            color: "rgb(190,190,190)",
            backgroundColor: 'rgb(50,50,50)'
        })
        createPlaylistButton.on("click", async () => {
            this.openPanel(this.playlistsView)
            await this.playlistsView.view.beginAdd()
        })
        playlistsHeader.append(createPlaylistButton, false, true, 20)
        playlistsHeader.domElement.addEventListener(
            'dragenter',
            (evt) => {
                if (!this.accordionOpenPromise[this.playlistsView.domElement.id]) {
                    this.accordionOpenPromise[this.playlistsView.domElement.id] = setTimeout(() => {
                        this.openPanel(this.playlistsView)
                    }, 500)                
                }
            }
        )
        playlistsHeader.domElement.addEventListener(
            'dragleave',
            (evt) => {
                if (this.accordionOpenPromise[this.playlistsView.domElement.id]) {
                    clearTimeout(this.accordionOpenPromise[this.playlistsView.domElement.id])
                    delete this.accordionOpenPromise[this.playlistsView.domElement.id]
                }
            }
        )

        this.addPanel("Sessions", [], this.sessionsListView)
        this.addPanel("Prelisten", [], this.precuePlayerView, 275)

        AppController.on('prelisten:playback-started', () => {
            this.openPanel(this.precuePlayerView)
        })
        

    }
}

module.exports = {
    Sidebar: Sidebar
}