const {EventDispatcher} = require("notify/event_dispatcher.js")

class PydjayAudioContext extends EventDispatcher{
    constructor() {
        super()
        this.audio_ctx =  new AudioContext()
        this.destination = this.audio_ctx.createMediaStreamDestination()
        this.time_callback = null
        this.time_monitor = this.audio_ctx.createScriptProcessor(256, 1, 1)
        this.time_monitor.onaudioprocess = () => {
            this.dispatch("timestamp", this.audio_ctx.currentTime)
        }
        this.time_monitor.connect(this.destination)
        this.source = null;
        this.outputs = {}
        this._mediaGroup = '_' + Math.random().toString(36).substr(2, 9);
    }

    // connectOutputs(channel_layout) {
    //     // let channel_names = Object.keys(channel_layout)
    //     // this.splitter.disconnect()
    //     // for (let i=0; i<channel_names.length; i++) {
    //     //     let channel_data = channel_layout[channel_names[i]]
    //     //     this.splitter.connect(this.gain_controls[channel_data.left], 0, 0)
    //     //     this.splitter.connect(this.gain_controls[channel_data.right], 1, 0)
    //     // }
    // }

    addOutput(name) {
        if (this.outputs[name] == undefined) {
            this.outputs[name] = new Audio()
            this.outputs[name].mediaGroup = this._mediaGroup
            this.outputs[name].src = URL.createObjectURL(this.destination.stream);
            //return.this.outputs[name].play();
        }
    }
}

module.exports = {
    PydjayAudioContext:PydjayAudioContext
}