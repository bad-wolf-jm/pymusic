const { DOMElement } = require("ui/dom/domelement.js")
const { Button } = require("ui/dom/button.js")

class DropdownMenu extends Button {
    constructor() {
        super()
        this.opened = false
        this.domElement.classList.add("dropdown-button")
        this.domElement.innerHTML = (`<i class="fa fa-ellipsis-h"></i>`)
        this.menuPane = new DOMElement("div")
        this.menuPane.setStyle({
            zIndex: 1000,
            width:'200px'
        })
        this.menuPane.domElement.classList.add("dropdown-content")
        this.domElement.addEventListener('click', () => {
            let win = document.getElementsByTagName('body')[0]
            if (this.opened) {
                win.removeChild(this.menuPane.domElement) 
                this.opened = false   
            } else {
                let myRect = this.domElement.getBoundingClientRect()
                let winRect = win.getBoundingClientRect()
                this.menuPane.setStyle({
                    top: (myRect.bottom - winRect.top) + "px",
                    left: (myRect.left - winRect.left) + "px",
                })
                win.appendChild(this.menuPane.domElement)    
                this.opened = true    
            }
        })
    }

    addItem(label, action) {
        let item = new DOMElement('a')
        item.domElement.innerHTML = label
        item.domElement.addEventListener("click", () => {
            action()
            let win = document.getElementsByTagName('body')[0]
            win.removeChild(this.menuPane.domElement) 
            this.opened = false   
        })
        this.menuPane.appendChild(item)
    }

    addSeparator() {
        this.menuPane.appendChild(new DOMElement('p'))
    }
}

module.exports = {
    DropdownMenu: DropdownMenu
}