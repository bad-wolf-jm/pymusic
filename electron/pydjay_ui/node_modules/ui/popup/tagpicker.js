const { Bubble } = require("ui/popup/bubble.js")
const { ConfirmButton, DismissButton } = require("ui/dialog/buttons.js")
const { BoxLayout } = require("ui/layout/box")

const { DOMElement } = require("ui/dom/domelement.js")
const { TagInput } = require("ui/dom/tag_input")

class TagPicker extends Bubble {
    constructor(parent_element, config) {
        super(parent_element)
        this.configuration = config
        this.layout = new BoxLayout("vertical", {left:10, right:10, top:10, bottom:10, padding:10})


        this._input = new TagInput()
        this._input.setTags(this.configuration.tags || [])
        this._input.setList(this.configuration.tagList || [])

        this.layout.append(this._input, true, true)

        let save_button = new ConfirmButton()
        save_button.setText("Save")
        save_button.on("click", () => {
            if (this.configuration.updateTags != undefined) {
                this.configuration.updateTags(this._input.getTags())
                this.close()
            }
        })

        let dismiss_button = new DismissButton()
        dismiss_button.setText("Close")
        dismiss_button.on("click", () => {
            this.close()
        })

        let button_layout = new BoxLayout("horizontal", {padding: 20})
        button_layout.append(save_button, true, true)
        button_layout.append(dismiss_button, true, true)
        this.layout.append(button_layout, false, true, 30)


        this.appendChildren([this.layout])
        this.setStyle({width:'350px', height:'250px'})
    }

}

module.exports = {
    TagPicker: TagPicker
}