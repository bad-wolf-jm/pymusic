const { TrackSetModel } = require("./track_set.js")


class FunctionModel extends TrackSetModel {
    constructor(db, collection, f) {
        super(db, collection)
        this.f = f
    }


    async getTracks() {
        let ids = (await this.f()) || []
        let objects = await this.collection.d.find({_id: {$in: ids}})
        return objects
    }
}


class QueryModel extends TrackSetModel {
    constructor(db, collection, q) {
        super(db, collection)
        this.q = q
    }

    compareTracks(a, b) {
        let x = a.title.toLowerCase();
        let y = b.title.toLowerCase();
        if (x < y) {return -1;}
        if (x > y) {return 1;}
        return 0;        
    }


    async getTracks() {
        let objects = await this.collection.d.find(this.q)
        return objects
    }

    async length() {
        return await this.collection.d.count(this.q)
    }

    async duration() {
        let objects = await this.collection.d.find(this.q)
        return this.db.tracks.duration(objects.map((e) => {return e._id}))
    }
}

module.exports = {
    QueryModel: QueryModel,
    FunctionModel: FunctionModel
}
