const { TrackSetModel } = require("./object_set.js")


class PlaylistModel extends TrackSetModel {
    constructor(db, collection, id) {
        super(db, collection, id)
    }

    compareTracks(a, b) {
        let x = a.title.toLowerCase();
        let y = b.title.toLowerCase();
        if (x < y) {return -1;}
        if (x > y) {return 1;}
        return 0;        
    }


    // async getAll() {
    //     let e = await this.c.d.find(this.q)
    //     e.sort(this.compareTracks)
    //     return e
    // }

}


class PlaylistViewModel extends TrackSetModel {
    constructor(db, collection, id) {
        super(db, collection, id)

    }

    compareTracks(a, b) {
        let x = a.title.toLowerCase();
        let y = b.title.toLowerCase();
        if (x < y) {return -1;}
        if (x > y) {return 1;}
        return 0;        
    }

    // getTracks() {
    //     let elements = await this._getElements()
    // }

    getElementById(id) {
        return this.d.getTrackById(id)
    }
    // async getAll() {
    //     let e = await this.c.d.find(this.q)
    //     e.sort(this.compareTracks)
    //     return e
    // }

}


class QueryModel extends TrackSetModel {
    constructor(db, collection, q) {
        super(db, collection)
        this.q = q
    }

    compareTracks(a, b) {
        let x = a.title.toLowerCase();
        let y = b.title.toLowerCase();
        if (x < y) {return -1;}
        if (x > y) {return 1;}
        return 0;        
    }


    async getTracks() {
        let e = await this.c.d.find(this.q)
        e.sort(this.compareTracks)
        return e
    }

}

module.exports = {
    PlaylistModel: PlaylistModel,
    QueryModel: QueryModel,
    PlaylistViewModel: PlaylistViewModel
}
