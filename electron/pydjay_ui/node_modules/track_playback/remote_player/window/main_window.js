// Sortable              = require("../../../lib/Sortable.js")
// WaveSurfer            = require("wavesurfer.js")
// var WaveSurferRegions = require('wavesurfer.js/dist/plugin/wavesurfer.regions.min.js');
// const path = require('path');
const { ipcRenderer } = require('electron');
const { PydjayAudioContext } = require("webaudio/audio_context.js")



mpc = new PlaybackController() //S_controller, Q_controller)
// pc  = new PrecueController() //S_controller, Q_controller)
// vc  = new VolumeController(mpc) // , pc)

// mpc.init_audio()
function init_audio() {
    let audio_context =  new PydjayAudioContext()
    if (audio_context.audio_ctx.destination.maxChannelCount >= 6) {
        mpc.reset_audio_context(mpl_channel_config)
    } else {
        mpc.reset_audio_context(mpl_channel_config2)
    }    
}

init_audio()
// pc.init_audio()
var response_prefix;
var parentId;

ipcRenderer.on('owner-class', (event, arg, win) => {
    response_prefix = arg
    parentId = win
    // document.getElementById("bo").innerHTML = `${arg} - ${parentId}`
    // console.log(response_prefix)
    // console.log(event)

    // ipcRenderer.sendTo(parentId, "FOO", 123)
    // let track = arg.track
    // mpc.play(track, arg.stream_start, arg.stream_end)
    // let channel = arg.channel
    // if (channel == "headphones") {
    //     //pc.play(track, arg.stream_start, arg.stream_end)
    // } else if (channel == "master") {
    // }
});



ipcRenderer.on('play', (event, arg) => {        
    let track = arg.track
    mpc.play(track, arg.stream_start, arg.stream_end)
    // let channel = arg.channel
    // if (channel == "headphones") {
    //     //pc.play(track, arg.stream_start, arg.stream_end)
    // } else if (channel == "master") {
    // }
});


ipcRenderer.on('pause', (event, arg) => {        
    // let channel = arg.channel
    // if (channel == "headphones") {
    //     //pc.pause()
    // } else if (channel == "master") {
    // }
    mpc.pause() 
});

ipcRenderer.on('resume', (event, arg) => {        
    // let channel = \arg.channel
    // if (channel == "headphones") {
    //     //pc.resume()
    // } else if (channel == "master") {
    // }
    mpc.resume() 

});

ipcRenderer.on('skip', (event, arg) => {        
    // let channel = arg.channel
    // if (channel == "headphones") {
    //     //pc.skip(arg.delta)
    // } else if (channel == "master") {
    // }
    mpc.skip(arg.delta)

});


ipcRenderer.on('reset-audio-system', (event, arg) => {
    let audio_context =  new PydjayAudioContext()
    if (audio_context.audio_ctx.destination.maxChannelCount >= 6) {
        mpc.reset_audio_context(mpl_channel_config)
    } else {
        mpc.reset_audio_context(mpl_channel_config2)
    }

    // mpc.reset_audio_context()

    // let channel = arg.channel
    // if (channel == "headphones") {
    //     pc.resume()
    // } else if (channel == "master") {
    //     mpc.resume() 
    // }
});




ipcRenderer.on('stop', (event, arg) => {        
    // let channel = arg.channel
    mpc.stop() 
    // if (channel == "headphones") {
    //     //pc.stop() 
    // } else if (channel == "master") {
    // }
});


ipcRenderer.on('mute-monitor', (event, arg) => {        
    // let channel = arg.channel
    // if (channel == "headphones") {
    //     //pc.stop() 
    // } else if (channel == "master") {
    mpc.mute_monitor()
    // }
});

ipcRenderer.on('restore-monitor', (event, arg) => {        
    // let channel = arg.channel
    // if (channel == "headphones") {
    //     //pc.stop() 
    // } else if (channel == "master") {
    mpc.restore_monitor()
    // }
});


// ipcRenderer.on('audio-reset', (event, arg) => {
//     vc.reset_audio()        
// });


// ipcRenderer.on('toggle-play-pause', (event, arg) => {        
//     let channel = arg.channel
// });


// pc.on('playback-stopped',  () => {
//     vc.restore_monitor()
// })

// pc.on('playback-paused', () => {
//     vc.restore_monitor()
// })

// pc.on('playback-started', () => {
//     vc.mute_monitor()
// })

